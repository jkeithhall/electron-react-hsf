:root {
    --font-secondary: 'Poppins', sans-serif;
    --font-primary: 'Roboto Mono', monospace;
    --font-monospace: 'Courier Prime', monospace;
    --primary-background-color: #1f2330;
    --secondary--background-color: #2f3e4e;
    --react-flow-background-color: #535671;
    --primary-color-main: #0288d1;
    --primary-color-light: #349fda;
    --default-border-radius: 5px;
    --header-height: 100px;
    --footer-height: 25px;
    --header-logo-margin: 20px;
    --nav-drawer-width-closed: 60px;
    --nav-drawer-width-open: 220px;
    --editing-palette-width: 500px;
    --work-space-padding: 20px;
    --work-space-height: calc(100vh - var(--header-height) -
    - 2 * var(--work-space-padding) - var(--footer-height));
    --dependency-drop-down-height: 76px;
    --sources-width: 570px;
    --evaluator-parameters-width: 500px;
    --simulation-parameters-width: 300px;
    --scheduler-parameters-width: 250px;
    --parameters-container-gap: 20px;
    --tasks-table-max-width: 1450px;
    --overlay-background-color: rgba(128,128,128,0.20);
    --map-container-height: 350px;
    --map-container-min-height: 200px;
    --confirm-close-margin: 20px;
    --confirm-close-gap: 20px;
    --drag-drop-gap: 20px;
    --calendar-stacking-context-width: 325px;
    --calendar-stacking-context-height: 345px;
}

/* CSS Reset */
*, *::before, *::after {
    box-sizing: border-box;
}
* {
    margin: 0;
}
html, body {
    height: 100%;
}
body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    border-radius: var(--default-border-radius);
}
img, picture, video, canvas {
    display: block;
    max-width: 100%;
}
input, button, textarea, select {
    font: inherit;
}
p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}
#root, #__next {
    isolation: isolate;
}
/*
  CSS Reset
*/
@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;500;600;800&family=VT323&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Courier+Prime:ital,wght@0,400;0,700;1,400;1,700&display=swap');

body {
    font-family: var(--font-primary);
    background-color: var(--primary-background-color);
    margin: 0;
}

code {
    font-family: var(--font-secondary);
}

ul, li {
    padding: 0;
    list-style-type: none;
}

header {
    width: 100%;
    height: var(--header-height);
}

/* footer {
    height: var(--footer-height);
    position: absolute;
    bottom: 0;
} */

::-webkit-scrollbar {
    width: 0px;
    height: 0px;
    background: transparent;
}

/* Minimalist scrollbar thumb */
::-webkit-scrollbar-thumb {
    background-color: rgba(100, 100, 100, 0.5);
    border-radius: 10px;
    border: none;
}

::-webkit-scrollbar:hover {
    width: 6px; /* Shows the scrollbar when hovering */
    height: 6px;
}

/* Transparent scrollbar track */
::-webkit-scrollbar-track {
    background: transparent;
}

/* Transparent scrollbar corner */
::-webkit-scrollbar-corner {
    background: transparent;
}

.sim-lab-logo-header {
    width: calc(var(--header-height) - var(--header-logo-margin));
    height: calc(var(--header-height) - var(--header-logo-margin));
    margin: var(--header-logo-margin);
}

.work-space {
    overflow: scroll;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    padding: var(--work-space-padding) var(--work-space-padding) 0 var(--work-space-padding);
    background-color: var(--primary-background-color);
    min-height: var(--work-space-height);
}

.work-space-nav-open {
    width: calc(100vw - var(--nav-drawer-width-open));
}

.work-space-nav-closed {
    width: calc(100vw - var(--nav-drawer-width-closed));
};

.scenario-parameters-container {
    width: 100%;
    height: 100%;
}

.sources {
    grid-area: sources;
    height: min-content;
    width: var(--sources-width);
}

.evaluator-parameters {
    grid-area: evaluator-parameters;
    height: min-content;
    width: var(--evaluator-parameters-width);
}

.simulation-parameters {
    grid-area: simulation-parameters;
    height: min-content;
    width: var(--simulation-parameters-width);
}

.scheduler-parameters {
    grid-area: scheduler-parameters;
    height: min-content;
    width: var(--scheduler-parameters-width);
}

@media (min-width: 1350px) {
    .scenario-parameters-container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: auto auto;
        grid-template-areas:
            'sources evaluator-parameters'
            'simulation-parameters scheduler-parameters';
        gap: var(--parameters-container-gap);
    }

    .sources {
        grid-row: 1 / 2;
        grid-column: 1 / 2;
    }

    .evaluator-parameters {
        grid-row: 1 / 3;
        grid-column: 2 / 3;
    }

    .simulation-parameters {
        grid-row: 2 / 3;
        grid-column: 1 / 2;
    }

    .scheduler-parameters {
        grid-row: 2 / 3;
        grid-column: 1 / 2;
    }

    /* Ensuring the simulation and scheduler parameters are side by side in the same column */
    .simulation-parameters {
        justify-self: start;
    }

    .scheduler-parameters {
        justify-self: end;
    }
}

@media (max-width: 1349px) {
    .scenario-parameters-container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: auto auto;
        grid-template-areas:
            'sources simulation-parameters'
            'evaluator-parameters scheduler-parameters';
        gap: var(--parameters-container-gap);
        margin-bottom: var(--parameters-container-gap);
    }

    .sources {
        width: var(--evaluator-parameters-width);
        grid-row: 1 / 2;
        grid-column: 1 / 2;
    }

    .simulation-parameters {
        grid-row: 1 / 2;
        grid-column: 2 / 3;
    }

    .evaluator-parameters {
        grid-row: 2 / 3;
        grid-column: 1 / 2;
    }

    .scheduler-parameters {
        grid-row: 2 / 3;
        grid-column: 2 / 3;
    }
}

.tasks-table {
    height: calc(100vh - var(--header-height) -
    2 * var(--work-space-padding) - var(--footer-height));
    max-width: var(--tasks-table-max-width);
}

.tasks-table-nav-open {
    width: calc(100vw - var(--nav-drawer-width-open)
    - 2 * var(--work-space-padding));
}

.tasks-table-nav-closed {
    width: calc(100vw - var(--nav-drawer-width-closed)
    - 2 * var(--work-space-padding));
}

.constraints-table {
    min-height: 200px;
    min-width: 700px;
    max-height: calc(100vh - var(--header-height) -
    2 * var(--work-space-padding) - var(--footer-height));
    max-width: var(--tasks-table-max-width);
}

.stacking-context {
    position: absolute;
    z-index: 2;
}

.graph-editor {
    align-self: flex-start;
    display: flex;
    justify-content: flex-start;
    align-items: flex-end;
    gap: 85px;
    height: var(--work-space-height);
}

.graph-editor-all-open {
    width: calc(100vw - var(--nav-drawer-width-open) -
    2 * var(--work-space-padding) - var(--editing-palette-width));
}

.graph-editor-nav-open {
    width: calc(100vw - var(--nav-drawer-width-open) -
    2 * var(--work-space-padding));
}

.graph-editor-palette-open {
    width: calc(100vw - var(--editing-palette-width) -
    var(--nav-drawer-width-closed) -
    2 * var(--work-space-padding));
}

.graph-editor-all-closed {
    width: calc(100vw - var(--nav-drawer-width-closed) -
    2 * var(--work-space-padding));
}

.dependency-editor {
    flex-direction: column;
    align-items: flex-start;
    gap: 0px;
}

.react-flow-board {
    align-self: first baseline;
    width: 100%;
    height: calc(100vh - var(--header-height) -
    2 * var(--work-space-padding) - var(--footer-height));
}

.dependency-flow-board {
    height: calc(100vh - var(--header-height) -
    2 * var(--work-space-padding) - var(--footer-height) -
    var(--dependency-drop-down-height) - 20px);
}

.react-flow__renderer {
    background-color: var(--react-flow-background-color);
}

.new-node-origin {
    display: flex;
    justify-content: center;
    align-items: center;
}

.asset-node {
    height: 100%;
    width: 100%;
    border: 1px solid #222222;
    border-radius: 5px;
}

.subcomponent-node {
    height: 100%;
    width: 100%;
    display: flex;
    color: #333333;
    background-color: rgb(238, 238, 238);
    justify-content: center;
    align-items: center;
    border: 1px solid #222222;
    border-radius: 5px;
}

.dependency-node {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 50px;
    width: 50px;
    background-color: var(--primary-color-main);
    border: 1px solid #1111117e;
    border-radius: 5px;
  }

.selected-node {
    border: 2px solid #e53935;
}

.location-inputs {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;
    margin: var(--confirm-close-margin);
    gap: 10px;
}

.map-container {
    position: relative;
    width: 100%;
    height: var(--map-container-height);
    min-height: var(--map-container-min-height);
    overflow: scroll;
    border: 1px solid var(--secondary--background-color);
}

.calendar-stacking-context {
    background-color: white;
    border-radius: 5px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: space-between;
    position: absolute;
    transform: translate(0, -119%);
    z-index: 2;
    height: var(--calendar-stacking-context-height);
    width: var(--calendar-stacking-context-width);
}

@media (max-width: 1349px) {
    .calendar-stacking-context {
        transform: translate(-101%, -19%);
    }
}

.drag-drop-container {
    margin: var(--confirm-close-margin);
    display: flex;
    align-self: flex-end;
    justify-content: space-evenly;
    align-items: center;
    gap: var(--drag-drop-gap);
}

.new-node-origin {
    display: flex;
    justify-content: center;
    align-items: center;
}

.confirm-close-icons {
    margin: var(--confirm-close-margin);
    display: flex;
    align-self: flex-end;
    justify-content: space-evenly;
    gap: var(--confirm-close-gap);
}

.timeline-container {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    width: 100%;
    background-color: #eeeeee;
    padding: 15px;
}

.overlay {
    z-index: 2;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: var(--overlay-background-color);
    display: flex;
    justify-content: center;
    align-items: center;
}


